#!/usr/bin/env python
# coding: utf-8

from manager.manager_base import ManagerBase
from model.MTRNN import MTRNN
import torch


class Manager(ManagerBase):
    def set_MTRNN(self):
        in_size, out_size = 30, 30
        self._net = MTRNN(
            layer_size={"in": in_size, "out": out_size,
                        "io": 50, "cf": self._cf_num, "cs": self._cs_num},
            tau={"tau_io": 2, "tau_cf": 10, "tau_cs": 30},
            open_rate=self._open_rate,
            activate=torch.nn.Tanh()
        )
        model_path = self._model_dir + \
            "MTRNN/1226/normal/5000/{}_{}.pth".format(
                self._cf_num, self._cs_num)
        checkpoint = torch.load(model_path, map_location=torch.device("cpu"))
        self._net.load_state_dict(checkpoint["model"])
        print(self._net)
        self._net.eval()
        self._net.init_state(1)


if __name__ == "__main__":
    before_scale = [
        [-0.04270818229521933, 0.18957765482950872],
        [-0.29682817864355704, 0.2959554940438517],
        [-0.178651903299404, 0.07360053468975894],
        [-0.8050505611875245, 0.06068505228547205],
        [-8.725181521368475e-05, 0.3774274174542602],
        [-0.23530529587914603, 0.20772908254564854],
        [-0.0026004436464077685, 0.3106860372443254],
        [-7.007999420166016, 17.700000762939453],
        [-9.652500629425049, 11.544000625610352],
        [-4.583999872207642, 5.915999412536621],
        [-4.623332977294922, 12.780665636062622],
        [-0.9049999713897705, 2.8959999084472656],
        [-1.9500001072883606, 2.0000000596046448],
        [-1.4336667656898499, 3.1166669726371765],
        [0.0, 0.7096773982048035],
        [0.0, 0.6193548440933228],
        [0.0, 0.5419355034828186],
        [0.0, 0.7193548083305359],
        [-0.03548387438058853, 0.6451613157987595],
        [-0.04838709160685539, 0.6645161211490631],
        [-0.04838710278272629, 0.5645161587744951],
        [-0.05806452035903931, 0.6322580575942993],
        [-0.49999999068677425, 0.34838709235191345],
        [-0.641935515217483, 0.2709677517414093],
        [-0.4709677454084158, 0.24838706851005554],
        [-0.5129032013937831, 0.3838709592819214],
        [-0.10000000149011612, 0.7677419185638428],
        [-0.08387096971273422, 0.7516129016876221],
        [-0.06129032373428345, 0.5580645203590393],
        [-0.029032258316874504, 0.5709677278064191],


        # 1223data
        #         [-0.09466658832071984, 0.06054550264435199],
        # [-0.1813222549244265, 0.35081116966400616],
        # [-0.24754004934167334, 0.1188394669540154],
        # [-0.19846142759379481, 0.284383925949403],
        # [-0.08902924221475353, 0.3653148614738753],
        # [-0.17163567849131955, 0.08040731436167627],
        # [-0.10159566742391513, 0.04415680877016781],
        # [-7.75200080871582, 10.139999389648438],
        # [-8.677500247955322, 7.293000221252441],
        # [-5.123999714851379, 7.823999583721161],
        # [-6.371333122253418, 5.8266661167144775],
        # [-1.085999920964241, 2.1720000207424164],
        # [-2.2000001072883606, 1.6500000357627869],
        # [-1.8076667785644531, 2.2440000772476196],
    ]
    manager = Manager()
    manager.init(before_scale)
    manager.run()
